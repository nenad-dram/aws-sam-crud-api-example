AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 20
    MemorySize: 512
    Runtime: java21
    Architectures:
      - x86_64
    Environment:
      Variables:
        USER_TABLE: !Ref UsersTable
    Layers:
      - !Ref UserLambdaLayer

Resources:
  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      TableName: Users

  UserLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: cd
      ContentUri: lambda-layer
      CompatibleRuntimes:
        - java21
    Metadata:
      BuildMethod: java21

  GetAllUsers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-all-users
      Handler: com.endyary.function.GetUsersHandler::handleRequest
      Events:
        GetAllUsers:
          Type: Api
          Properties:
            Path: /users
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable

  GetUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-user
      Handler: com.endyary.function.GetUserHandler::handleRequest
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable

  CreateUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create-user
      Handler: com.endyary.function.CreateUserHandler::handleRequest
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /users
            Method: post
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref UsersTable

  UpdateUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update-user
      Handler: com.endyary.function.UpdateUserHandler::handleRequest
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: put
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref UsersTable

  DeleteUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete-user
      Handler: com.endyary.function.DeleteUserHandler::handleRequest
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: delete
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:DescribeTable
                - dynamodb:DeleteItem
              Resource: !Sub 
                - 'arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${table}'
                - Table: !Ref UsersTable

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/users/"
